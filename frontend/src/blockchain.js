import { ethers } from "ethers";

const contractABI = [
  {
    "_format": "hh-sol-artifact-1",
    "contractName": "CertificateRegistry",
    "sourceName": "contracts/CertificateRegistry.sol",
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "certHash",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "recipient",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "course",
            "type": "string"
          }
        ],
        "name": "CertificateIssued",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "certHash",
            "type": "bytes32"
          }
        ],
        "name": "CertificateRevoked",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "admin",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "name": "certificates",
        "outputs": [
          {
            "internalType": "string",
            "name": "recipient",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "course",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "institution",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "issueDate",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "isValid",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_recipient",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "_course",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "_institution",
            "type": "string"
          }
        ],
        "name": "issueCertificate",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "_certHash",
            "type": "bytes32"
          }
        ],
        "name": "revokeCertificate",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "_certHash",
            "type": "bytes32"
          }
        ],
        "name": "verifyCertificate",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "bytecode": "0x6080604052348015600f57600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f43806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063742f06881461005c578063850c176814610090578063beec1caa146100c0578063c6cbc52a146100dc578063f851a440146100f8575b600080fd5b61007660048036038101906100719190610689565b610116565b60405161008795949392919061077a565b60405180910390f35b6100aa60048036038101906100a59190610689565b6102f1565b6040516100b791906107e2565b60405180910390f35b6100da60048036038101906100d59190610932565b61031d565b005b6100f660048036038101906100f19190610689565b6104c9565b005b610100610619565b60405161010d9190610a1a565b60405180910390f35b600060205280600052604060002060009150905080600001805461013990610a64565b80601f016020809104026020016040519081016040528092919081815260200182805461016590610a64565b80156101b25780601f10610187576101008083540402835291602001916101b2565b820191906000526020600020905b81548152906001019060200180831161019557829003601f168201915b5050505050908060010180546101c790610a64565b80601f01602080910402602001604051908101604052809291908181526020018280546101f390610a64565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b50505050509080600201805461025590610a64565b80601f016020809104026020016040519081016040528092919081815260200182805461028190610a64565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16905085565b600080600083815260200190815260200160002060040160009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a490610b07565b60405180910390fd5b6000838383426040516020016103c69493929190610b84565b6040516020818303038152906040528051906020012090506040518060a0016040528085815260200184815260200183815260200142815260200160011515815250600080838152602001908152602001600020600082015181600001908161042f9190610d72565b5060208201518160010190816104459190610d72565b50604082015181600201908161045b9190610d72565b506060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050807f23cb08027d6cf3f884123dc2fcb28589d27c93a6efdd5273282b92e1bab9767185856040516104bb929190610e44565b60405180910390a250505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055090610b07565b60405180910390fd5b60008082815260200190815260200160002060040160009054906101000a900460ff166105bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b290610eed565b60405180910390fd5b600080600083815260200190815260200160002060040160006101000a81548160ff021916908315150217905550807f44d80a438cb4fa3b5aedbe551ce3d9382e37f446917b783e1dee70a03b4180e360405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61066681610653565b811461067157600080fd5b50565b6000813590506106838161065d565b92915050565b60006020828403121561069f5761069e610649565b5b60006106ad84828501610674565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106f05780820151818401526020810190506106d5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610718826106b6565b61072281856106c1565b93506107328185602086016106d2565b61073b816106fc565b840191505092915050565b6000819050919050565b61075981610746565b82525050565b60008115159050919050565b6107748161075f565b82525050565b600060a0820190508181036000830152610794818861070d565b905081810360208301526107a8818761070d565b905081810360408301526107bc818661070d565b90506107cb6060830185610750565b6107d8608083018461076b565b9695505050505050565b60006020820190506107f7600083018461076b565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61083f826106fc565b810181811067ffffffffffffffff8211171561085e5761085d610807565b5b80604052505050565b600061087161063f565b905061087d8282610836565b919050565b600067ffffffffffffffff82111561089d5761089c610807565b5b6108a6826106fc565b9050602081019050919050565b82818337600083830152505050565b60006108d56108d084610882565b610867565b9050828152602081018484840111156108f1576108f0610802565b5b6108fc8482856108b3565b509392505050565b600082601f830112610919576109186107fd565b5b81356109298482602086016108c2565b91505092915050565b60008060006060848603121561094b5761094a610649565b5b600084013567ffffffffffffffff8111156109695761096861064e565b5b61097586828701610904565b935050602084013567ffffffffffffffff8111156109965761099561064e565b5b6109a286828701610904565b925050604084013567ffffffffffffffff8111156109c3576109c261064e565b5b6109cf86828701610904565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a04826109d9565b9050919050565b610a14816109f9565b82525050565b6000602082019050610a2f6000830184610a0b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a7c57607f821691505b602082108103610a8f57610a8e610a35565b5b50919050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b6000610af16022836106c1565b9150610afc82610a95565b604082019050919050565b60006020820190508181036000830152610b2081610ae4565b9050919050565b600081905092915050565b6000610b3d826106b6565b610b478185610b27565b9350610b578185602086016106d2565b80840191505092915050565b6000819050919050565b610b7e610b7982610746565b610b63565b82525050565b6000610b908287610b32565b9150610b9c8286610b32565b9150610ba88285610b32565b9150610bb48284610b6d565b60208201915081905095945050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610beb565b610c328683610beb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610c6f610c6a610c6584610746565b610c4a565b610746565b9050919050565b6000819050919050565b610c8983610c54565b610c9d610c9582610c76565b848454610bf8565b825550505050565b600090565b610cb2610ca5565b610cbd818484610c80565b505050565b5b81811015610ce157610cd6600082610caa565b600181019050610cc3565b5050565b601f821115610d2657610cf781610bc6565b610d0084610bdb565b81016020851015610d0f578190505b610d23610d1b85610bdb565b830182610cc2565b50505b505050565b600082821c905092915050565b6000610d4960001984600802610d2b565b1980831691505092915050565b6000610d628383610d38565b9150826002028217905092915050565b610d7b826106b6565b67ffffffffffffffff811115610d9457610d93610807565b5b610d9e8254610a64565b610da9828285610ce5565b600060209050601f831160018114610ddc5760008415610dca578287015190505b610dd48582610d56565b865550610e3c565b601f198416610dea86610bc6565b60005b82811015610e1257848901518255600182019150602085019450602081019050610ded565b86831015610e2f5784890151610e2b601f891682610d38565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152610e5e818561070d565b90508181036020830152610e72818461070d565b90509392505050565b7f436572746966696361746520646f6573206e6f74206578697374206f7220697360008201527f20616c7265616479207265766f6b656400000000000000000000000000000000602082015250565b6000610ed76030836106c1565b9150610ee282610e7b565b604082019050919050565b60006020820190508181036000830152610f0681610eca565b905091905056fea26469706673582212204e26492fc150180031c33fd53245f2e65aad83b2721b8e75edba9b2276e0260a64736f6c634300081c0033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063742f06881461005c578063850c176814610090578063beec1caa146100c0578063c6cbc52a146100dc578063f851a440146100f8575b600080fd5b61007660048036038101906100719190610689565b610116565b60405161008795949392919061077a565b60405180910390f35b6100aa60048036038101906100a59190610689565b6102f1565b6040516100b791906107e2565b60405180910390f35b6100da60048036038101906100d59190610932565b61031d565b005b6100f660048036038101906100f19190610689565b6104c9565b005b610100610619565b60405161010d9190610a1a565b60405180910390f35b600060205280600052604060002060009150905080600001805461013990610a64565b80601f016020809104026020016040519081016040528092919081815260200182805461016590610a64565b80156101b25780601f10610187576101008083540402835291602001916101b2565b820191906000526020600020905b81548152906001019060200180831161019557829003601f168201915b5050505050908060010180546101c790610a64565b80601f01602080910402602001604051908101604052809291908181526020018280546101f390610a64565b80156102405780601f1061021557610100808354040283529160200191610240565b820191906000526020600020905b81548152906001019060200180831161022357829003601f168201915b50505050509080600201805461025590610a64565b80601f016020809104026020016040519081016040528092919081815260200182805461028190610a64565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16905085565b600080600083815260200190815260200160002060040160009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a490610b07565b60405180910390fd5b6000838383426040516020016103c69493929190610b84565b6040516020818303038152906040528051906020012090506040518060a0016040528085815260200184815260200183815260200142815260200160011515815250600080838152602001908152602001600020600082015181600001908161042f9190610d72565b5060208201518160010190816104459190610d72565b50604082015181600201908161045b9190610d72565b506060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050807f23cb08027d6cf3f884123dc2fcb28589d27c93a6efdd5273282b92e1bab9767185856040516104bb929190610e44565b60405180910390a250505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055090610b07565b60405180910390fd5b60008082815260200190815260200160002060040160009054906101000a900460ff166105bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b290610eed565b60405180910390fd5b600080600083815260200190815260200160002060040160006101000a81548160ff021916908315150217905550807f44d80a438cb4fa3b5aedbe551ce3d9382e37f446917b783e1dee70a03b4180e360405160405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61066681610653565b811461067157600080fd5b50565b6000813590506106838161065d565b92915050565b60006020828403121561069f5761069e610649565b5b60006106ad84828501610674565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106f05780820151818401526020810190506106d5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610718826106b6565b61072281856106c1565b93506107328185602086016106d2565b61073b816106fc565b840191505092915050565b6000819050919050565b61075981610746565b82525050565b60008115159050919050565b6107748161075f565b82525050565b600060a0820190508181036000830152610794818861070d565b905081810360208301526107a8818761070d565b905081810360408301526107bc818661070d565b90506107cb6060830185610750565b6107d8608083018461076b565b9695505050505050565b60006020820190506107f7600083018461076b565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61083f826106fc565b810181811067ffffffffffffffff8211171561085e5761085d610807565b5b80604052505050565b600061087161063f565b905061087d8282610836565b919050565b600067ffffffffffffffff82111561089d5761089c610807565b5b6108a6826106fc565b9050602081019050919050565b82818337600083830152505050565b60006108d56108d084610882565b610867565b9050828152602081018484840111156108f1576108f0610802565b5b6108fc8482856108b3565b509392505050565b600082601f830112610919576109186107fd565b5b81356109298482602086016108c2565b91505092915050565b60008060006060848603121561094b5761094a610649565b5b600084013567ffffffffffffffff8111156109695761096861064e565b5b61097586828701610904565b935050602084013567ffffffffffffffff8111156109965761099561064e565b5b6109a286828701610904565b925050604084013567ffffffffffffffff8111156109c3576109c261064e565b5b6109cf86828701610904565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a04826109d9565b9050919050565b610a14816109f9565b82525050565b6000602082019050610a2f6000830184610a0b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a7c57607f821691505b602082108103610a8f57610a8e610a35565b5b50919050565b7f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b6000610af16022836106c1565b9150610afc82610a95565b604082019050919050565b60006020820190508181036000830152610b2081610ae4565b9050919050565b600081905092915050565b6000610b3d826106b6565b610b478185610b27565b9350610b578185602086016106d2565b80840191505092915050565b6000819050919050565b610b7e610b7982610746565b610b63565b82525050565b6000610b908287610b32565b9150610b9c8286610b32565b9150610ba88285610b32565b9150610bb48284610b6d565b60208201915081905095945050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610beb565b610c328683610beb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610c6f610c6a610c6584610746565b610c4a565b610746565b9050919050565b6000819050919050565b610c8983610c54565b610c9d610c9582610c76565b848454610bf8565b825550505050565b600090565b610cb2610ca5565b610cbd818484610c80565b505050565b5b81811015610ce157610cd6600082610caa565b600181019050610cc3565b5050565b601f821115610d2657610cf781610bc6565b610d0084610bdb565b81016020851015610d0f578190505b610d23610d1b85610bdb565b830182610cc2565b50505b505050565b600082821c905092915050565b6000610d4960001984600802610d2b565b1980831691505092915050565b6000610d628383610d38565b9150826002028217905092915050565b610d7b826106b6565b67ffffffffffffffff811115610d9457610d93610807565b5b610d9e8254610a64565b610da9828285610ce5565b600060209050601f831160018114610ddc5760008415610dca578287015190505b610dd48582610d56565b865550610e3c565b601f198416610dea86610bc6565b60005b82811015610e1257848901518255600182019150602085019450602081019050610ded565b86831015610e2f5784890151610e2b601f891682610d38565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152610e5e818561070d565b90508181036020830152610e72818461070d565b90509392505050565b7f436572746966696361746520646f6573206e6f74206578697374206f7220697360008201527f20616c7265616479207265766f6b656400000000000000000000000000000000602082015250565b6000610ed76030836106c1565b9150610ee282610e7b565b604082019050919050565b60006020820190508181036000830152610f0681610eca565b905091905056fea26469706673582212204e26492fc150180031c33fd53245f2e65aad83b2721b8e75edba9b2276e0260a64736f6c634300081c0033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }
  
];

const contractAddress = import.meta.env.VITE_CONTRACT_ADDRESS;

export const getBlockchain = async () => {
  if (!window.ethereum) {
    alert("MetaMask is not installed!");
    return null;
  }

  const provider = new ethers.BrowserProvider(window.ethereum);
  await window.ethereum.request({ method: "eth_requestAccounts" });

  const signer = await provider.getSigner();
  const contract = new ethers.Contract(contractAddress, contractABI, signer);

  return { contract, signer };
};

export const issueCertificate = async (recipient, course, institution) => {
  const { contract } = await getBlockchain();
  if (!contract) return null;

  try {
    const tx = await contract.issueCertificate(recipient, course, institution);
    await tx.wait();
    alert("Certificate issued successfully!");
  } catch (error) {
    console.error("Error issuing certificate:", error);
    alert("Transaction failed!");
  }
};

export const verifyCertificate = async (certHash) => {
  const { contract } = await getBlockchain();
  if (!contract) return null;

  try {
    const isValid = await contract.verifyCertificate(certHash);
    return isValid;
  } catch (error) {
    console.error("Error verifying certificate:", error);
    alert("Verification failed!");
    return false;
  }
};

export const revokeCertificate = async (certHash) => {
  const { contract } = await getBlockchain();
  if (!contract) return null;

  try {
    const tx = await contract.revokeCertificate(certHash);
    await tx.wait();
    alert("Certificate revoked successfully!");
  } catch (error) {
    console.error("Error revoking certificate:", error);
    alert("Transaction failed!");
  }
};
